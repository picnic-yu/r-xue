{"remainingRequest":"D:\\work\\crud\\xue\\node_modules\\babel-loader\\lib\\index.js?{\"presets\":[\"@babel/preset-env\",\"@babel/preset-react\",[\"D:\\\\work\\\\crud\\\\xue\\\\node_modules\\\\babel-preset-docz\\\\dist\\\\index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"@babel/plugin-syntax-dynamic-import\",\"@babel/plugin-syntax-import-meta\",\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-proposal-json-strings\",[\"@babel/plugin-proposal-decorators\",{\"legacy\":true}],\"@babel/plugin-proposal-function-sent\",\"@babel/plugin-proposal-export-namespace-from\",\"@babel/plugin-proposal-numeric-separator\",\"@babel/plugin-proposal-throw-expressions\",\"@babel/plugin-proposal-export-default-from\",\"@babel/plugin-proposal-logical-assignment-operators\",\"@babel/plugin-proposal-optional-chaining\",[\"@babel/plugin-proposal-pipeline-operator\",{\"proposal\":\"minimal\"}],\"@babel/plugin-proposal-nullish-coalescing-operator\",\"@babel/plugin-proposal-do-expressions\",\"@babel/plugin-proposal-function-bind\",[\"D:\\\\work\\\\crud\\\\xue\\\\node_modules\\\\docz-utils\\\\lib\\\\named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"D:\\\\work\\\\crud\\\\xue\\\\node_modules\\\\react-hot-loader\\\\babel.js\"],\"babelrc\":false,\"cacheDirectory\":true,\"cacheCompression\":false,\"compact\":false}!D:\\work\\crud\\xue\\src\\components\\Button.mdx","dependencies":[{"path":"D:\\work\\crud\\xue\\src\\components\\Button.mdx","mtime":1544688296891},{"path":"D:\\work\\crud\\xue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\crud\\xue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"D:\\\\work\\\\crud\\\\xue\\\\src\\\\components\\\\Button.mdx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Playground, PropsTable } from 'docz';\nimport Button from './Button';\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"button\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Button\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Buttons make common actions more obvious and help users more easily perform them. Buttons use labels and sometimes icons to communicate the action that will occur when the user touches them.\"), React.createElement(MDXTag, {\n        name: \"h3\",\n        components: components,\n        props: {\n          \"id\": \"best-practices\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Best practices\"), React.createElement(MDXTag, {\n        name: \"ul\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Group buttons logically into sets based on usage and importance.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Ensure that button actions are clear and consistent.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"The main action of a group set can be a primary button.\"), React.createElement(MDXTag, {\n        name: \"li\",\n        components: components,\n        parentName: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Select a single button variation and do not mix them.\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"properties\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Properties\"), React.createElement(PropsTable, {\n        of: Button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"basic-usage\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Basic usage\"), React.createElement(Playground, {\n        __codesandbox: \"undefined\",\n        __position: 1,\n        __code: \"<Button>Click me</Button>\",\n        __scope: {\n          props: this ? this.props : props,\n          Button: Button\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Click me\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"with-different-sizes\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"With different sizes\"), React.createElement(Playground, {\n        __codesandbox: \"undefined\",\n        __position: 2,\n        __code: \"<Button scale=\\\"small\\\">Click me</Button>\\n<Button scale=\\\"normal\\\">Click me</Button>\\n<Button scale=\\\"big\\\">Click me</Button>\",\n        __scope: {\n          props: this ? this.props : props,\n          Button: Button\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Button, {\n        scale: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        scale: \"normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        scale: \"big\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Click me\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"with-different-colors\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"With different colors\"), React.createElement(Playground, {\n        __codesandbox: \"undefined\",\n        __position: 3,\n        __code: \"<Button kind=\\\"primary\\\">Click me</Button>\\n<Button kind=\\\"secondary\\\">Click me</Button>\\n<Button kind=\\\"cancel\\\">Click me</Button>\\n<Button kind=\\\"dark\\\">Click me</Button>\\n<Button kind=\\\"gray\\\">Click me</Button>\",\n        __scope: {\n          props: this ? this.props : props,\n          Button: Button\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        kind: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Click me\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"outlined\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Outlined\"), React.createElement(Playground, {\n        __codesandbox: \"undefined\",\n        __position: 4,\n        __code: \"<Button kind=\\\"primary\\\" outline>\\n  Click me\\n</Button>\\n<Button kind=\\\"secondary\\\" outline>\\n  Click me\\n</Button>\\n<Button kind=\\\"cancel\\\" outline>\\n  Click me\\n</Button>\\n<Button kind=\\\"dark\\\" outline>\\n  Click me\\n</Button>\\n<Button kind=\\\"gray\\\" outline>\\n  Click me\\n</Button>\",\n        __scope: {\n          props: this ? this.props : props,\n          Button: Button\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        kind: \"primary\",\n        outline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"secondary\",\n        outline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"cancel\",\n        outline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"dark\",\n        outline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Click me\"), React.createElement(Button, {\n        kind: \"gray\",\n        outline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Click me\")));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"D:\\\\work\\\\crud\\\\xue\\\\src\\\\components\\\\Button.mdx\");\n  leaveModule(module);\n})();\n\n;\nMDXContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MDXContent\"\n};",{"version":3,"sources":["D:\\work\\crud\\xue\\src\\components\\Button.mdx"],"names":["React","MDXTag","Playground","PropsTable","Button","MDXContent","props","layout","components","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz'\nimport Button  from './Button'\n\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"button\"}}>{`Button`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Buttons make common actions more obvious and help users more easily perform them. Buttons use labels and sometimes icons to communicate the action that will occur when the user touches them.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"best-practices\"}}>{`Best practices`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Group buttons logically into sets based on usage and importance.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Ensure that button actions are clear and consistent.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The main action of a group set can be a primary button.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Select a single button variation and do not mix them.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"properties\"}}>{`Properties`}</MDXTag>\n<PropsTable of={Button} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"basic-usage\"}}>{`Basic usage`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={1} __code={`<Button>Click me</Button>`} __scope={{props: this ? this.props : props,Button}}>\n  <Button>Click me</Button>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"with-different-sizes\"}}>{`With different sizes`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={2} __code={`<Button scale=\"small\">Click me</Button>\n<Button scale=\"normal\">Click me</Button>\n<Button scale=\"big\">Click me</Button>`} __scope={{props: this ? this.props : props,Button}}>\n  <Button scale=\"small\">Click me</Button>\n  <Button scale=\"normal\">Click me</Button>\n  <Button scale=\"big\">Click me</Button>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"with-different-colors\"}}>{`With different colors`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={3} __code={`<Button kind=\"primary\">Click me</Button>\n<Button kind=\"secondary\">Click me</Button>\n<Button kind=\"cancel\">Click me</Button>\n<Button kind=\"dark\">Click me</Button>\n<Button kind=\"gray\">Click me</Button>`} __scope={{props: this ? this.props : props,Button}}>\n  <Button kind=\"primary\">Click me</Button>\n  <Button kind=\"secondary\">Click me</Button>\n  <Button kind=\"cancel\">Click me</Button>\n  <Button kind=\"dark\">Click me</Button>\n  <Button kind=\"gray\">Click me</Button>\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"outlined\"}}>{`Outlined`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={4} __code={`<Button kind=\"primary\" outline>\n  Click me\n</Button>\n<Button kind=\"secondary\" outline>\n  Click me\n</Button>\n<Button kind=\"cancel\" outline>\n  Click me\n</Button>\n<Button kind=\"dark\" outline>\n  Click me\n</Button>\n<Button kind=\"gray\" outline>\n  Click me\n</Button>`} __scope={{props: this ? this.props : props,Button}}>\n  <Button kind=\"primary\" outline>Click me</Button>\n  <Button kind=\"secondary\" outline>Click me</Button>\n  <Button kind=\"cancel\" outline>Click me</Button>\n  <Button kind=\"dark\" outline>Click me</Button>\n  <Button kind=\"gray\" outline>Click me</Button>\n</Playground>\n           </MDXTag>\n  }\n}\n  "]}]}